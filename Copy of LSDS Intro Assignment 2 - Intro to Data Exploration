{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of LSDS Intro Assignment 2 - Intro to Data Exploration","version":"0.3.2","provenance":[{"file_id":"1XnbAg_i7tyYpcjllw90eeFoh2yMsHrbF","timestamp":1557533948692},{"file_id":"1klzjBonq6-eFeHvaAlwb9HMnkgBg-X2I","timestamp":1557520630343},{"file_id":"1EEWBpWvMRIdJF9b81ZnIuVhoZSL45P5w","timestamp":1535495742354}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"dJNVAHIX8XCi","colab_type":"text"},"source":["## 1) Copy the notebook to your google account."]},{"cell_type":"markdown","metadata":{"id":"ViAyRUAM8cMo","colab_type":"text"},"source":["## 2) Import the pandas library and alias it as \"pd\"."]},{"cell_type":"code","metadata":{"id":"Kd_nusDS98v7","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import numpy as np"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YjCgT50E8zPu","colab_type":"text"},"source":["## 3) Read in the CSV dataset that is found at the following URL:\n","[DATASET HERE](https://raw.githubusercontent.com/ryanleeallred/datasets/master/messy-data.csv)\n"]},{"cell_type":"code","metadata":{"id":"HzEBd-hz99Ma","colab_type":"code","colab":{}},"source":["df=pd.read_csv('https://raw.githubusercontent.com/ryanleeallred/datasets/master/messy-data.csv')"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Mu1IYH3g9EF3","colab_type":"text"},"source":["## 4) Print out the shape as well as the first 5 rows of the dataframe."]},{"cell_type":"code","metadata":{"id":"ZLnVdtLW99vN","colab_type":"code","outputId":"f450adcc-81a5-4479-b54e-5b6f85edfce5","executionInfo":{"status":"ok","timestamp":1557605491445,"user_tz":420,"elapsed":508,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}},"colab":{"base_uri":"https://localhost:8080/","height":669}},"source":["df.shape\n","df.head(20)"],"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alpha</th>\n","      <th>beta</th>\n","      <th>gamma</th>\n","      <th>delta</th>\n","      <th>epsilon</th>\n","      <th>zeta</th>\n","      <th>eta</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>48</td>\n","      <td>12</td>\n","      <td>240</td>\n","      <td>3.0</td>\n","      <td>Yes</td>\n","      <td>AZ</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>46</td>\n","      <td>18</td>\n","      <td>230</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>VT</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>44</td>\n","      <td>24</td>\n","      <td>220</td>\n","      <td>7.0</td>\n","      <td>No</td>\n","      <td>PA</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>42</td>\n","      <td>30</td>\n","      <td>210</td>\n","      <td>9.0</td>\n","      <td>Yes</td>\n","      <td>OK</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>44</td>\n","      <td>36</td>\n","      <td>220</td>\n","      <td>11.0</td>\n","      <td>Yes</td>\n","      <td>MD</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>7</td>\n","      <td>46</td>\n","      <td>42</td>\n","      <td>230</td>\n","      <td>13.0</td>\n","      <td>No</td>\n","      <td>OH</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>8</td>\n","      <td>48</td>\n","      <td>48</td>\n","      <td>240</td>\n","      <td>15.0</td>\n","      <td>Yes</td>\n","      <td>AL</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>9</td>\n","      <td>50</td>\n","      <td>54</td>\n","      <td>250</td>\n","      <td>17.0</td>\n","      <td>No</td>\n","      <td>AR</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>5</td>\n","      <td>40</td>\n","      <td>30</td>\n","      <td>200</td>\n","      <td>19.0</td>\n","      <td>Yes</td>\n","      <td>GA</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5</td>\n","      <td>38</td>\n","      <td>30</td>\n","      <td>190</td>\n","      <td>NaN</td>\n","      <td>No</td>\n","      <td>DE</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>5</td>\n","      <td>36</td>\n","      <td>30</td>\n","      <td>180</td>\n","      <td>23.0</td>\n","      <td>No</td>\n","      <td>NV</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5</td>\n","      <td>34</td>\n","      <td>30</td>\n","      <td>170</td>\n","      <td>25.0</td>\n","      <td>No</td>\n","      <td>VA</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>5</td>\n","      <td>32</td>\n","      <td>30</td>\n","      <td>160</td>\n","      <td>27.0</td>\n","      <td>Yes</td>\n","      <td>NM</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>15</td>\n","      <td>50</td>\n","      <td>90</td>\n","      <td>250</td>\n","      <td>29.0</td>\n","      <td>No</td>\n","      <td>WV</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>14</td>\n","      <td>49</td>\n","      <td>84</td>\n","      <td>245</td>\n","      <td>31.0</td>\n","      <td>Yes</td>\n","      <td>ID</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>13</td>\n","      <td>47</td>\n","      <td>78</td>\n","      <td>235</td>\n","      <td>33.0</td>\n","      <td>Yes</td>\n","      <td>NH</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>12</td>\n","      <td>43</td>\n","      <td>72</td>\n","      <td>215</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>OH</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>12</td>\n","      <td>40</td>\n","      <td>72</td>\n","      <td>200</td>\n","      <td>37.0</td>\n","      <td>No</td>\n","      <td>NY</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>12</td>\n","      <td>37</td>\n","      <td>72</td>\n","      <td>185</td>\n","      <td>NaN</td>\n","      <td>Yes</td>\n","      <td>NM</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>13</td>\n","      <td>34</td>\n","      <td>78</td>\n","      <td>170</td>\n","      <td>41.0</td>\n","      <td>Yes</td>\n","      <td>DC</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    alpha  beta  gamma  delta  epsilon zeta eta\n","0       2    48     12    240      3.0  Yes  AZ\n","1       3    46     18    230      5.0  NaN  VT\n","2       4    44     24    220      7.0   No  PA\n","3       5    42     30    210      9.0  Yes  OK\n","4       6    44     36    220     11.0  Yes  MD\n","5       7    46     42    230     13.0   No  OH\n","6       8    48     48    240     15.0  Yes  AL\n","7       9    50     54    250     17.0   No  AR\n","8       5    40     30    200     19.0  Yes  GA\n","9       5    38     30    190      NaN   No  DE\n","10      5    36     30    180     23.0   No  NV\n","11      5    34     30    170     25.0   No  VA\n","12      5    32     30    160     27.0  Yes  NM\n","13     15    50     90    250     29.0   No  WV\n","14     14    49     84    245     31.0  Yes  ID\n","15     13    47     78    235     33.0  Yes  NH\n","16     12    43     72    215     35.0  NaN  OH\n","17     12    40     72    200     37.0   No  NY\n","18     12    37     72    185      NaN  Yes  NM\n","19     13    34     78    170     41.0  Yes  DC"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"markdown","metadata":{"id":"lQXA62rd9OWM","colab_type":"text"},"source":["## 5) Print out the datatypes of the dataframe columns (dataset features)."]},{"cell_type":"code","metadata":{"id":"5hPgdg0W9-1j","colab_type":"code","outputId":"5d04e40f-bb84-480d-9c6a-c40d03221d15","executionInfo":{"status":"ok","timestamp":1557605491445,"user_tz":420,"elapsed":497,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}},"colab":{"base_uri":"https://localhost:8080/","height":221}},"source":["df.info()"],"execution_count":26,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 165 entries, 0 to 164\n","Data columns (total 7 columns):\n","alpha      165 non-null int64\n","beta       165 non-null int64\n","gamma      165 non-null int64\n","delta      165 non-null int64\n","epsilon    141 non-null float64\n","zeta       146 non-null object\n","eta        165 non-null object\n","dtypes: float64(1), int64(4), object(2)\n","memory usage: 9.1+ KB\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WcMnUSW5fb9b","colab_type":"text"},"source":["## 6) Print out the summary statistics of the numeric values of your dataset i.e. min, max, mean, standard deviation, etc."]},{"cell_type":"code","metadata":{"id":"4Np346ECfn0i","colab_type":"code","outputId":"a8ae9bfc-417b-40ff-859c-1c71cba2ad62","executionInfo":{"status":"ok","timestamp":1557605491586,"user_tz":420,"elapsed":628,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["df.describe()"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alpha</th>\n","      <th>beta</th>\n","      <th>gamma</th>\n","      <th>delta</th>\n","      <th>epsilon</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>165.000000</td>\n","      <td>165.000000</td>\n","      <td>165.000000</td>\n","      <td>165.000000</td>\n","      <td>141.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>46.169697</td>\n","      <td>17.921212</td>\n","      <td>277.018182</td>\n","      <td>89.606061</td>\n","      <td>164.794326</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>24.371521</td>\n","      <td>17.769180</td>\n","      <td>146.229125</td>\n","      <td>88.845900</td>\n","      <td>96.430843</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2.000000</td>\n","      <td>-11.000000</td>\n","      <td>12.000000</td>\n","      <td>-55.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>7.000000</td>\n","      <td>168.000000</td>\n","      <td>35.000000</td>\n","      <td>83.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>44.000000</td>\n","      <td>15.000000</td>\n","      <td>264.000000</td>\n","      <td>75.000000</td>\n","      <td>163.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>65.000000</td>\n","      <td>32.000000</td>\n","      <td>390.000000</td>\n","      <td>160.000000</td>\n","      <td>247.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>85.000000</td>\n","      <td>50.000000</td>\n","      <td>510.000000</td>\n","      <td>250.000000</td>\n","      <td>331.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            alpha        beta       gamma       delta     epsilon\n","count  165.000000  165.000000  165.000000  165.000000  141.000000\n","mean    46.169697   17.921212  277.018182   89.606061  164.794326\n","std     24.371521   17.769180  146.229125   88.845900   96.430843\n","min      2.000000  -11.000000   12.000000  -55.000000    3.000000\n","25%     28.000000    7.000000  168.000000   35.000000   83.000000\n","50%     44.000000   15.000000  264.000000   75.000000  163.000000\n","75%     65.000000   32.000000  390.000000  160.000000  247.000000\n","max     85.000000   50.000000  510.000000  250.000000  331.000000"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"markdown","metadata":{"id":"m2KFAh6T97-t","colab_type":"text"},"source":["## 6) Clean all NaN values from the dataset.\n","\n","Feel free to add code cells as needed."]},{"cell_type":"code","metadata":{"id":"9fkfvv5ELfuE","colab_type":"code","colab":{}},"source":["# df.isnull().sum()\n","#This tells us that epsilon and zeta have null values. \n","#We'll remove these NaN values with a forward fill. \n","\n","df['epsilon'] = df['epsilon'].fillna(method='ffill')\n","df['zeta'] = df['zeta'].fillna(method='ffill')\n","\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"A-5xPOhlPMCb","colab_type":"code","outputId":"7dbb4d5d-60e6-4ef9-c7b7-54721dc440fd","executionInfo":{"status":"ok","timestamp":1557605491589,"user_tz":420,"elapsed":610,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}},"colab":{"base_uri":"https://localhost:8080/","height":153}},"source":["#Checking to see if the data is now clean\n","df.isnull().sum()"],"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["alpha      0\n","beta       0\n","gamma      0\n","delta      0\n","epsilon    0\n","zeta       0\n","eta        0\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"markdown","metadata":{"id":"wP7BDqcwLauI","colab_type":"text"},"source":["## 6.1) Describe how you addressed the NaN values and give an explanation justifying your decision."]},{"cell_type":"code","metadata":{"id":"WMyNKMBa-Vsb","colab_type":"code","colab":{}},"source":["##### I used the forward fill method so that the values are more meaningful than a '0'. Forward fill lets us draw more meaningful conclusions. "],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ln9-44Jg-V6d","colab_type":"text"},"source":["## 7) Create scatter plots using Matplotlib. Can you find any interesting relationships in the data? Be sure to label your axis and to give your graphs a title.\n","\n","Screenshot cool graphs that you create and share them with the slack channel. \n","\n","Don't forget to import matplotlib before trying to use it."]},{"cell_type":"code","metadata":{"id":"eeJwN6OBLUyv","colab_type":"code","outputId":"fe44d90c-fe48-4dcd-c913-a2ec60f15d7a","executionInfo":{"status":"ok","timestamp":1557605491848,"user_tz":420,"elapsed":848,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}},"colab":{"base_uri":"https://localhost:8080/","height":312}},"source":["import matplotlib.pyplot as plt\n","plt.scatter(df['alpha'],df['delta']) \n","plt.xlabel('Alpha')\n","plt.ylabel('Delta')\n","plt.title(\"Alpha meets Delta\")"],"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Alpha meets Delta')"]},"metadata":{"tags":[]},"execution_count":31},{"output_type":"display_data","data":{"image/png":"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\nRK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"yo4YDnjpmdAj","colab_type":"text"},"source":["## 8) STRETCH GOAL (Extra Credit)\n","\n","Machine Learning algorithms don't do well with categorical values that are represented by strings. In order to have this dataset completely cleaned we need to transform the categorical variables that are represented as strings into numeric categorical variables\n","\n","- **Turn all categorical features (columns) into numeric features**\n","\n","Hints:\n","\n","[Scikit-Learn One-Hot-Encoder](http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html)\n","\n","[Pandas Docs - Working with Categorical Data](https://pandas.pydata.org/pandas-docs/stable/categorical.html)\n","\n","[Guide to Encoding Categorical Variables in Python](http://pbpython.com/categorical-encoding.html)"]},{"cell_type":"code","metadata":{"id":"Xn0XxRY_Qmyn","colab_type":"code","colab":{}},"source":["df.head(20) \n","#Zeta and eta are objects - they need to be convered to strings.. \n","df_copy=df\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2Dn60d7QoO8w","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"b203ea6e-67d8-41dc-dfcd-f0bc5d1656d0","executionInfo":{"status":"ok","timestamp":1557605491852,"user_tz":420,"elapsed":830,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}}},"source":["print(df_copy.isnull().values.sum())"],"execution_count":33,"outputs":[{"output_type":"stream","text":["0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DPr-uChNdb_7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"83cb827f-7788-4b81-f503-a363ada46d2a","executionInfo":{"status":"ok","timestamp":1557605491853,"user_tz":420,"elapsed":822,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}}},"source":["print(df_copy['eta'].value_counts().count())\n"],"execution_count":34,"outputs":[{"output_type":"stream","text":["49\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zxAcjNmZfNES","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":204},"outputId":"ce28aae9-e93d-47d3-bfb1-37c34590886c","executionInfo":{"status":"ok","timestamp":1557605513840,"user_tz":420,"elapsed":394,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}}},"source":["df_copy['zeta_new'] = np.where(df_copy['zeta'].str.contains('Yes'), 1, 0)\n","\n","df_copy.head()"],"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>alpha</th>\n","      <th>beta</th>\n","      <th>gamma</th>\n","      <th>delta</th>\n","      <th>epsilon</th>\n","      <th>zeta</th>\n","      <th>eta</th>\n","      <th>zeta_new</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2</td>\n","      <td>48</td>\n","      <td>12</td>\n","      <td>240</td>\n","      <td>3.0</td>\n","      <td>Yes</td>\n","      <td>AZ</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3</td>\n","      <td>46</td>\n","      <td>18</td>\n","      <td>230</td>\n","      <td>5.0</td>\n","      <td>Yes</td>\n","      <td>VT</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>44</td>\n","      <td>24</td>\n","      <td>220</td>\n","      <td>7.0</td>\n","      <td>No</td>\n","      <td>PA</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5</td>\n","      <td>42</td>\n","      <td>30</td>\n","      <td>210</td>\n","      <td>9.0</td>\n","      <td>Yes</td>\n","      <td>OK</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6</td>\n","      <td>44</td>\n","      <td>36</td>\n","      <td>220</td>\n","      <td>11.0</td>\n","      <td>Yes</td>\n","      <td>MD</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   alpha  beta  gamma  delta  epsilon zeta eta  zeta_new\n","0      2    48     12    240      3.0  Yes  AZ         1\n","1      3    46     18    230      5.0  Yes  VT         1\n","2      4    44     24    220      7.0   No  PA         0\n","3      5    42     30    210      9.0  Yes  OK         1\n","4      6    44     36    220     11.0  Yes  MD         1"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"id":"NFwrP6AUgmBe","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":391},"outputId":"eae722ff-9a7d-4807-801d-f61f5c25fac5","executionInfo":{"status":"ok","timestamp":1557605793601,"user_tz":420,"elapsed":391,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}}},"source":["df_copy_onehot = df_copy.copy()\n","df_copy_onehot = pd.get_dummies(df_copy_onehot, columns=['eta'], prefix = ['eta'])\n","\n","print(df_copy_onehot.head())"],"execution_count":37,"outputs":[{"output_type":"stream","text":["   alpha  beta  gamma  delta  epsilon zeta  zeta_new  eta_AK  eta_AL  eta_AR  \\\n","0      2    48     12    240      3.0  Yes         1       0       0       0   \n","1      3    46     18    230      5.0  Yes         1       0       0       0   \n","2      4    44     24    220      7.0   No         0       0       0       0   \n","3      5    42     30    210      9.0  Yes         1       0       0       0   \n","4      6    44     36    220     11.0  Yes         1       0       0       0   \n","\n","   ...  eta_SD  eta_TN  eta_TX  eta_UT  eta_VA  eta_VT  eta_WA  eta_WI  \\\n","0  ...       0       0       0       0       0       0       0       0   \n","1  ...       0       0       0       0       0       1       0       0   \n","2  ...       0       0       0       0       0       0       0       0   \n","3  ...       0       0       0       0       0       0       0       0   \n","4  ...       0       0       0       0       0       0       0       0   \n","\n","   eta_WV  eta_WY  \n","0       0       0  \n","1       0       0  \n","2       0       0  \n","3       0       0  \n","4       0       0  \n","\n","[5 rows x 56 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-KpNi4LUij1J","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1054},"outputId":"90d45c22-dabb-4683-a5fb-524030ddb9b3","executionInfo":{"status":"ok","timestamp":1557606457197,"user_tz":420,"elapsed":366,"user":{"displayName":"Sriram Sharma","photoUrl":"https://lh4.googleusercontent.com/-AfbL7gI_6qI/AAAAAAAAAAI/AAAAAAAAALc/scHzC35QFTc/s64/photo.jpg","userId":"16330861996061951163"}}},"source":["df_copy_onehot.info()"],"execution_count":38,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 165 entries, 0 to 164\n","Data columns (total 56 columns):\n","alpha       165 non-null int64\n","beta        165 non-null int64\n","gamma       165 non-null int64\n","delta       165 non-null int64\n","epsilon     165 non-null float64\n","zeta        165 non-null object\n","zeta_new    165 non-null int64\n","eta_AK      165 non-null uint8\n","eta_AL      165 non-null uint8\n","eta_AR      165 non-null uint8\n","eta_AZ      165 non-null uint8\n","eta_CA      165 non-null uint8\n","eta_CO      165 non-null uint8\n","eta_CT      165 non-null uint8\n","eta_DC      165 non-null uint8\n","eta_DE      165 non-null uint8\n","eta_FL      165 non-null uint8\n","eta_GA      165 non-null uint8\n","eta_HI      165 non-null uint8\n","eta_ID      165 non-null uint8\n","eta_IL      165 non-null uint8\n","eta_IN      165 non-null uint8\n","eta_KS      165 non-null uint8\n","eta_KY      165 non-null uint8\n","eta_LA      165 non-null uint8\n","eta_MD      165 non-null uint8\n","eta_ME      165 non-null uint8\n","eta_MI      165 non-null uint8\n","eta_MN      165 non-null uint8\n","eta_MO      165 non-null uint8\n","eta_MS      165 non-null uint8\n","eta_MT      165 non-null uint8\n","eta_NC      165 non-null uint8\n","eta_ND      165 non-null uint8\n","eta_NE      165 non-null uint8\n","eta_NH      165 non-null uint8\n","eta_NJ      165 non-null uint8\n","eta_NM      165 non-null uint8\n","eta_NV      165 non-null uint8\n","eta_NY      165 non-null uint8\n","eta_OH      165 non-null uint8\n","eta_OK      165 non-null uint8\n","eta_OR      165 non-null uint8\n","eta_PA      165 non-null uint8\n","eta_RI      165 non-null uint8\n","eta_SC      165 non-null uint8\n","eta_SD      165 non-null uint8\n","eta_TN      165 non-null uint8\n","eta_TX      165 non-null uint8\n","eta_UT      165 non-null uint8\n","eta_VA      165 non-null uint8\n","eta_VT      165 non-null uint8\n","eta_WA      165 non-null uint8\n","eta_WI      165 non-null uint8\n","eta_WV      165 non-null uint8\n","eta_WY      165 non-null uint8\n","dtypes: float64(1), int64(5), object(1), uint8(49)\n","memory usage: 17.0+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"TeOFeySOlF2X","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}